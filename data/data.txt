AnyCompany Data File

backup.sh
#!/bin/bash

# Set backup directory
BACKUP_DIR="/path/to/backup/directory"

# Get current date
DATE=$(date +%Y-%m-%d)

# Create backup directory if it doesn't exist
mkdir -p "$BACKUP_DIR"

# Backup database
echo "Backing up database..."
mysqldump -u root -p database_name > "$BACKUP_DIR/database_$DATE.sql"

# Backup website files
echo "Backing up website files..."
tar -czf "$BACKUP_DIR/website_$DATE.tar.gz" /path/to/website/files

echo "Backup completed successfully."

deploy.sh
#!/bin/bash

# Pull latest code from Git repository
git pull origin main

# Install dependencies
npm install

# Build the application
npm run build

# Stop the running application
sudo systemctl stop myapp

# Deploy the new build
sudo cp -r build/* /var/www/myapp/

# Restart the application
sudo systemctl start myapp

echo "Deployment completed successfully."

monitoring.sh
#!/bin/bash

# Check if a process is running
process_name="nginx"
if pgrep -x "$process_name" >/dev/null; then
    echo "$process_name is running."
else
    echo "$process_name is not running. Restarting..."
    sudo systemctl restart nginx
fi

# Check disk space
disk_usage=$(df -h / | awk 'NR==2 {print $5}' | sed 's/%//')
if [ "$disk_usage" -gt 80 ]; then
    echo "Warning: Disk usage is above 80%."
fi

# Check RAM usage
ram_usage=$(free -m | awk 'NR==2 {printf "%s/%sMB (%.2f%%)\n", $3, $2, $3*100/$2}')
echo "RAM usage: $ram_usage"
